{"version":3,"file":"odo-expandable.js","sources":["../src/settings.js","../src/expandable-item.js","../src/expandable-group.js","../src/expandable.js"],"sourcesContent":["export default {\n  ClassName: {\n    TRIGGER_OPEN: 'odo-expandable__trigger--open',\n    TARGET_OPEN: 'odo-expandable__target--open',\n  },\n  Attribute: {\n    TRIGGER: 'data-expandable-trigger',\n    TARGET: 'data-expandable-target',\n    GROUP: 'data-expandable-group',\n  },\n  Defaults: {\n    groupedItem: false,\n  },\n};\n","/**\n * @fileoverview An basic, expandable component that has both a trigger\n * and a target to open.\n *\n * @author Matt Zaso\n */\nimport Settings from './settings';\n\nclass ExpandableItem {\n  constructor(id, options = {}) {\n    /** @type {string} */\n    this.id = id;\n\n    /**\n     * Override any defaults with the given options.\n     * @type {Object}\n     */\n    this.options = Object.assign({}, Settings.Defaults, options);\n\n    /** @type {Element} */\n    this._trigger = document.body.querySelector(`[${Settings.Attribute.TRIGGER}=\"${id}\"]`);\n\n    /** @type {Element} */\n    this._target = document.body.querySelector(`[${Settings.Attribute.TARGET}=\"${id}\"]`);\n\n    this._setA11yAttributes();\n\n    if (!this.options.groupedItem) {\n      this._onTriggerClick = this._triggerClickHandler.bind(this);\n      document.body.addEventListener('click', this._onTriggerClick);\n    }\n  }\n\n  /**\n   * Handler for clicks on the trigger.\n   * @param {Event} evt Event object.\n   * @private\n   */\n  _triggerClickHandler(evt) {\n    evt.preventDefault();\n    const closest = evt.target.closest(`[${Settings.Attribute.TRIGGER}]`);\n\n    if (closest === this._trigger) {\n      this.toggle();\n    }\n  }\n\n  /**\n   * Sets the appropriate ARIA attributes for a11y.\n   * @private\n   */\n  _setA11yAttributes() {\n    const elementId = `expandable-${this.id}`;\n\n    this._trigger.setAttribute('aria-describedby', elementId);\n    this._target.setAttribute('id', elementId);\n    this._trigger.setAttribute('aria-expanded', this.isOpen.toString());\n    this._trigger.setAttribute('aria-controls', elementId);\n    this._target.setAttribute('aria-labelledby', elementId);\n    this._target.setAttribute('aria-hidden', (!this.isOpen).toString());\n  }\n\n  /**\n   * Removes the ARIA attributes assigned on instantiation.\n   * @private\n   */\n  _removeA11yAttributes() {\n    this._trigger.removeAttribute('aria-describedby');\n    this._target.removeAttribute('id');\n    this._trigger.removeAttribute('aria-expanded');\n    this._target.removeAttribute('aria-labelledby');\n    this._target.removeAttribute('aria-hidden');\n  }\n\n  /**\n   * Toggles the expandable's state (open/closed).\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Opens the expandable.\n   */\n  open() {\n    this._target.classList.add(Settings.ClassName.TARGET_OPEN);\n    this._trigger.classList.add(Settings.ClassName.TRIGGER_OPEN);\n    this._trigger.setAttribute('aria-expanded', 'true');\n    this._target.setAttribute('aria-hidden', 'false');\n  }\n\n  /**\n   * Closes the expandable.\n   */\n  close() {\n    this._target.classList.remove(Settings.ClassName.TARGET_OPEN);\n    this._trigger.classList.remove(Settings.ClassName.TRIGGER_OPEN);\n    this._trigger.setAttribute('aria-expanded', 'false');\n    this._target.setAttribute('aria-hidden', 'true');\n  }\n\n  get isOpen() {\n    return this._target.classList.contains(Settings.ClassName.TARGET_OPEN);\n  }\n\n  /**\n   * Dispose this instance and its handlers.\n   */\n  dispose() {\n    if (!this.options.groupedItem) {\n      document.body.removeEventListener('click', this._onTriggerClick);\n    }\n\n    this._removeA11yAttributes();\n  }\n\n  /**\n   * Instantiates a single instance of the Expandable Item.\n   *\n   * @param {Element} element Either a trigger or target.\n   * @return {ExpandableItem} the instance of the Expandable Item.\n   * @public\n   */\n  static initialize(element) {\n    const triggerId = element.getAttribute(Settings.Attribute.TRIGGER);\n    const targetId = element.getAttribute(Settings.Attribute.TARGET);\n    const id = targetId || triggerId;\n\n    return new ExpandableItem(id);\n  }\n}\n\nObject.assign(ExpandableItem, Settings);\n\nexport default ExpandableItem;\n","/**\n * @fileoverview A wrapper for multiple Expandable elements that will\n * allow them to operate coherently in an accordion type fashion.\n *\n * @author Matt Zaso\n */\nimport Settings from './settings';\nimport ExpandableItem from './expandable-item';\n\nclass ExpandableGroup {\n  constructor(elements) {\n    /** @type {Array.<!Element>} */\n    this._elements = elements;\n\n    /** @type {Array.<!ExpandableItem>} */\n    this._expandables = elements.map(trigger => new ExpandableItem(\n      trigger.getAttribute(Settings.Attribute.TRIGGER),\n      { groupedItem: true },\n    ));\n\n    this._onClick = this._onClickHandler.bind(this);\n    document.body.addEventListener('click', this._onClick);\n  }\n\n  /**\n   * Handler for clicks on the trigger.\n   * @param {MouseEvent} evt Event object.\n   * @private\n   */\n  _onClickHandler(evt) {\n    evt.preventDefault();\n    const closest = evt.target.closest(`[${Settings.Attribute.TRIGGER}]`);\n\n    if (this._elements.includes(closest)) {\n      this._toggleGroupVisibility(closest.getAttribute(Settings.Attribute.TRIGGER));\n    }\n  }\n\n  /**\n   * Will iterate over all grouped items and toggle the selected one while collapsing all others.\n   * @param {number} selectedId The ID of the selected target to expand.\n   * @private\n   */\n  _toggleGroupVisibility(selectedId) {\n    this._expandables.forEach((expandable) => {\n      if (expandable.id === selectedId) {\n        expandable.toggle();\n      } else {\n        expandable.close();\n      }\n    });\n  }\n\n  /**\n   * Dispose this instance and its handlers. Will also dispose all child\n   * instances.\n   * @public\n   */\n  dispose() {\n    document.body.removeEventListener('click', this._onTriggerClick);\n    this._expandables.forEach(item => item.dispose());\n  }\n\n  /**\n   * Instantiates a single instance of the Expandable Group.\n   *\n   * @param {Array.<Element>} elements An array of the elements in the group.\n   * @return {ExpandableItem} the instance of the Expandable Item.\n   * @public\n   */\n  static initialize(elements) {\n    return new ExpandableGroup(elements);\n  }\n}\n\nObject.assign(ExpandableGroup, Settings);\n\nexport default ExpandableGroup;\n","import Settings from './settings';\nimport ExpandableGroup from './expandable-group';\nimport ExpandableItem from './expandable-item';\n\n/**\n * Instantiates all instances of the expandable. Groups are instantiated separate from\n * Expandables and require different parameters. This helper chunks out and groups the\n * grouped expandables before instantiating all of them.\n *\n * @return {Array.<Expandable, ExpandableGroup>} all instances of both types.\n * @public\n */\nexport function initializeAll() {\n  const elements = Array.from(document.querySelectorAll(`[${Settings.Attribute.TRIGGER}]`));\n\n  const single = [];\n  const groups = [];\n  const groupIds = [];\n\n  elements.forEach((item) => {\n    const groupId = item.getAttribute(Settings.Attribute.GROUP);\n    if (groupId) {\n      if (groupIds.includes(groupId)) {\n        groups.push(elements.filter(el => el.getAttribute(Settings.Attribute.GROUP) === groupId));\n        groupIds.push(groupId);\n      }\n    } else {\n      single.push(item);\n    }\n  });\n\n  const singleInstances =\n    single.map(trigger => new ExpandableItem(trigger.getAttribute(Settings.Attribute.TRIGGER)));\n  const groupInstances = groups.map(grouping => new ExpandableGroup(grouping));\n\n  return singleInstances.concat(groupInstances);\n}\n\nexport { default as ExpandableItem } from './expandable-item';\nexport { default as ExpandableGroup } from './expandable-group';\n"],"names":["ExpandableItem","id","options","Object","assign","Settings","Defaults","_trigger","document","body","querySelector","Attribute","TRIGGER","_target","TARGET","_setA11yAttributes","groupedItem","_onTriggerClick","_triggerClickHandler","bind","addEventListener","evt","preventDefault","closest","target","toggle","elementId","setAttribute","isOpen","toString","_removeA11yAttributes","removeAttribute","close","open","classList","add","ClassName","TARGET_OPEN","TRIGGER_OPEN","remove","dispose","removeEventListener","initialize","element","triggerId","getAttribute","targetId","contains","ExpandableGroup","elements","_elements","_expandables","map","trigger","_onClick","_onClickHandler","includes","_toggleGroupVisibility","selectedId","forEach","expandable","item","initializeAll","Array","from","querySelectorAll","single","groups","groupIds","groupId","GROUP","push","filter","el","singleInstances","groupInstances","grouping","concat"],"mappings":"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"}