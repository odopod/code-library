{"version":3,"file":"odo-expandable.js","sources":["../src/settings.js","../src/expandable-group.js","../src/expandable.js"],"sourcesContent":["export default {\n  ClassName: {\n    TRIGGER_OPEN: 'odo-expandable__trigger--open',\n    TARGET_OPEN: 'odo-expandable__target--open',\n  },\n  Attribute: {\n    TRIGGER: 'data-expandable-trigger',\n    TARGET: 'data-expandable-target',\n    GROUP: 'data-expandable-group',\n  },\n  Defaults: {\n    groupedItem: false,\n  },\n};\n","/**\n * @fileoverview A wrapper for multiple Expandable elements that will\n * allow them to operate coherently in an accordion type fashion.\n *\n * @author Matt Zaso\n */\nimport Settings from './settings';\nimport Expandable from './expandable';\n\nclass ExpandableGroup {\n  constructor(elements) {\n    /** @type {Array.<!Element>} */\n    this._elements = elements;\n\n    /** @type {Array.<!Expandable>} */\n    this._expandables = elements.map(trigger => new Expandable(\n      trigger.getAttribute(Settings.Attribute.TRIGGER),\n      { groupedItem: true },\n    ));\n\n    this._onClick = this._onClickHandler.bind(this);\n    document.body.addEventListener('click', this._onClick);\n  }\n\n  /**\n   * Handler for clicks on the trigger.\n   * @param {MouseEvent} evt Event object.\n   * @private\n   */\n  _onClickHandler(evt) {\n    evt.preventDefault();\n    const closest = evt.target.closest(`[${Settings.Attribute.TRIGGER}]`);\n\n    if (this._elements.includes(closest)) {\n      this._toggleGroupVisibility(closest.getAttribute(Settings.Attribute.TRIGGER));\n    }\n  }\n\n  /**\n   * Will iterate over all grouped items and toggle the selected one while collapsing all others.\n   * @param {number} selectedId The ID of the selected target to expand.\n   * @private\n   */\n  _toggleGroupVisibility(selectedId) {\n    this._expandables.forEach((expandable) => {\n      if (expandable.id === selectedId) {\n        expandable.toggle();\n      } else {\n        expandable.close();\n      }\n    });\n  }\n\n  /**\n   * Dispose this instance and its handlers. Will also dispose all child\n   * instances.\n   * @public\n   */\n  dispose() {\n    document.body.removeEventListener('click', this._onTriggerClick);\n    this._expandables.forEach(item => item.dispose());\n  }\n}\n\nexport default ExpandableGroup;\n","/**\n * @fileoverview An basic, expandable component that has both a trigger\n * and a target to open.\n *\n * @author Matt Zaso\n */\nimport Settings from './settings';\nimport ExpandableGroup from './expandable-group';\n\nclass Expandable {\n  constructor(id, options = {}) {\n    /** @type {string} */\n    this.id = id;\n\n    /**\n     * Override any defaults with the given options.\n     * @type {Object}\n     */\n    this.options = Object.assign({}, Settings.Defaults, options);\n\n    /** @type {Element} */\n    this._trigger = document.body.querySelector(`[${Settings.Attribute.TRIGGER}=\"${id}\"]`);\n\n    /** @type {Element} */\n    this._target = document.body.querySelector(`[${Settings.Attribute.TARGET}=\"${id}\"]`);\n\n    this._setA11yAttributes();\n\n    if (!this.options.groupedItem) {\n      this._onTriggerClick = this._triggerClickHandler.bind(this);\n      document.body.addEventListener('click', this._onTriggerClick);\n    }\n  }\n\n  /**\n   * Handler for clicks on the trigger.\n   * @param {Event} evt Event object.\n   * @private\n   */\n  _triggerClickHandler(evt) {\n    evt.preventDefault();\n    const closest = evt.target.closest(`[${Settings.Attribute.TRIGGER}]`);\n\n    if (closest === this._trigger) {\n      this.toggle();\n    }\n  }\n\n  /**\n   * Sets the appropriate ARIA attributes for a11y.\n   * @private\n   */\n  _setA11yAttributes() {\n    const elementId = `expandable-${this.id}`;\n\n    this._trigger.setAttribute('aria-describedby', elementId);\n\n    this._target.setAttribute('id', elementId);\n    this._target.setAttribute('role', 'region');\n    this._trigger.setAttribute('aria-expanded', this.isOpen.toString());\n    this._trigger.setAttribute('aria-controls', elementId);\n    this._target.setAttribute('aria-labelledby', elementId);\n    this._target.setAttribute('aria-hidden', (!this.isOpen).toString());\n  }\n\n  /**\n   * Removes the ARIA attributes assigned on instantiation.\n   * @private\n   */\n  _removeA11yAttributes() {\n    this._trigger.removeAttribute('aria-describedby');\n    this._target.removeAttribute('id');\n    this._target.removeAttribute('role');\n    this._trigger.removeAttribute('aria-expanded');\n    this._target.removeAttribute('aria-labelledby');\n    this._target.removeAttribute('aria-hidden');\n  }\n\n  /**\n   * Toggles the expandable's state (open/closed).\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Opens the expandable.\n   */\n  open() {\n    this._target.classList.add(Settings.ClassName.TARGET_OPEN);\n    this._trigger.classList.add(Settings.ClassName.TRIGGER_OPEN);\n    this._trigger.setAttribute('aria-expanded', 'true');\n    this._target.setAttribute('aria-hidden', 'false');\n  }\n\n  /**\n   * Closes the expandable.\n   */\n  close() {\n    this._target.classList.remove(Settings.ClassName.TARGET_OPEN);\n    this._trigger.classList.remove(Settings.ClassName.TRIGGER_OPEN);\n    this._trigger.setAttribute('aria-expanded', 'false');\n    this._target.setAttribute('aria-hidden', 'true');\n  }\n\n  get isOpen() {\n    return this._target.classList.contains(Settings.ClassName.TARGET_OPEN);\n  }\n\n  /**\n   * Dispose this instance and its handlers.\n   */\n  dispose() {\n    if (!this.options.groupedItem) {\n      document.body.removeEventListener('click', this._onTriggerClick);\n    }\n\n    this._removeA11yAttributes();\n  }\n\n  /**\n   * Instantiates all instances of the expandable. Groups are instantiated separate from\n   * Expandables and require different parameters. This helper chunks out and groups the\n   * grouped expandables before instantiating all of them.\n   *\n   * @return {Array.<Expandable, ExpandableGroup>} all instances of both types.\n   * @public\n   */\n  static initializeAll() {\n    const elements = Array.from(document.querySelectorAll(`[${Settings.Attribute.TRIGGER}]`));\n\n    const single = [];\n    const groups = [];\n    const groupIds = [];\n\n    elements.forEach((item) => {\n      const groupId = item.getAttribute(Settings.Attribute.GROUP);\n      if (groupId) {\n        if (groupIds.indexOf(groupId) < 0) {\n          groups.push(elements.filter(el => el.getAttribute(Settings.Attribute.GROUP) === groupId));\n          groupIds.push(groupId);\n        }\n      } else {\n        single.push(item);\n      }\n    });\n\n    const singleInstances =\n      single.map(trigger => new Expandable(trigger.getAttribute(Settings.Attribute.TRIGGER)));\n    const groupInstances = groups.map(grouping => new ExpandableGroup(grouping));\n\n    return singleInstances.concat(groupInstances);\n  }\n}\n\nObject.assign(Expandable, Settings);\n\nexport default Expandable;\n"],"names":["ExpandableGroup","elements","_elements","_expandables","map","Expandable","trigger","getAttribute","Settings","Attribute","TRIGGER","groupedItem","_onClick","_onClickHandler","bind","body","addEventListener","evt","preventDefault","closest","target","includes","_toggleGroupVisibility","selectedId","forEach","expandable","id","toggle","close","dispose","removeEventListener","_onTriggerClick","item","options","Object","assign","Defaults","_trigger","document","querySelector","_target","TARGET","_setA11yAttributes","_triggerClickHandler","elementId","setAttribute","isOpen","toString","_removeA11yAttributes","removeAttribute","open","classList","add","ClassName","TARGET_OPEN","TRIGGER_OPEN","remove","initializeAll","Array","from","querySelectorAll","single","groups","groupIds","groupId","GROUP","indexOf","push","filter","el","singleInstances","groupInstances","grouping","concat","contains"],"mappings":"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"}