{"version":3,"file":"odo-helpers.min.js","sources":["../src/animation-stepper.js","../src/browser.js","../src/polyfills.js","../src/utilities.js","../src/device.js","../src/events.js","../src/animation.js","../src/array.js","../src/coordinate.js","../src/dom.js","../src/math.js","../src/string.js","../src/style.js","../src/timer.js"],"sourcesContent":["/**\n * @fileoverview A simple class for providing a stepping function for each\n * animation frame over a given length of time. Uses requestAnimationFrame\n * where available. Its API is similar to the AnimationPlayer in `Element.animate`.\n *\n * Assumes `requestAnimationFrame`, `Function.prototype.bind`, and `Object.assign`\n * are available.\n *\n * @author glen@odopod.com (Glen Cheney)\n */\n\nfunction noop() {}\n\nclass Stepper {\n  /**\n   * Easy animation stepper.\n   *\n   * @param {Object} options Options object.\n   * @param {number} options.start Starting number. Value to animate from.\n   * @param {number} options.end Ending number. Value to animate to.\n   * @param {function(number, number)} options.step Step function which will receive\n   *     the step value and the current percentage completed.\n   * @param {number} options.duration Length of the animation. Default is 250ms.\n   * @param {Object} options.context The object scope to invoke the function in.\n   * @param {Function} options.easing Easing function to apply.\n   * @constructor\n   */\n  constructor(options) {\n    this.options = Object.assign({}, Stepper.Defaults, options);\n\n    /**\n     * The percentage value which the scrubber and reveals will be animated to.\n     * @type {number}\n     * @private\n     */\n    this._animationAmount = this.options.end - this.options.start;\n\n    /**\n     * Time when the animation timer started.\n     * @type {number}\n     * @private\n     */\n    this._animationStart = +new Date();\n\n    this._handler = this._animateLoop.bind(this);\n\n    /**\n     * Called at the end of the animation with `options.context`.\n     * @type {Function}\n     */\n    this.onfinish = noop;\n\n    // Start loop.\n    this._requestId = requestAnimationFrame(this._handler);\n  }\n\n  /**\n   * Internal loop ticker.\n   * @private\n   */\n  _animateLoop() {\n    const now = new Date().getTime();\n    const remainingTime = this._animationStart + this.options.duration - now;\n\n    // Even when duration is zero, this will result in Infinity, which will only\n    // call the step method once then onfinish, which is desired.\n    let percent = 1 - (remainingTime / this.options.duration);\n\n    // Abort if already at or past 100%.\n    if (percent >= 1) {\n      // Make sure it always finishes with 1.\n      this.options.step.call(this.options.context, this.options.end, 1);\n      this.onfinish.call(this.options.context);\n      this.dispose();\n      return;\n    }\n\n    // Apply easing.\n    percent = this.options.easing(percent);\n\n    // Request animation frame.\n    this._requestId = requestAnimationFrame(this._handler);\n\n    // Tick.\n    this.options.step.call(this.options.context,\n      this.options.start + (this._animationAmount * percent), percent);\n  }\n\n  /**\n   * Stop the animation and dispose of it.\n   */\n  cancel() {\n    cancelAnimationFrame(this._requestId);\n    this.dispose();\n  }\n\n  /**\n   * Destroy the animation instance.\n   */\n  dispose() {\n    this._handler = null;\n    this.options.context = null;\n  }\n}\n\nStepper.Defaults = {\n  start: 0,\n  end: 1,\n  duration: 250,\n  step: noop,\n  context: window,\n  easing(k) {\n    return -0.5 * (Math.cos(Math.PI * k) - 1);\n  },\n};\n\nexport default Stepper;\n","\n/* istanbul ignore next */\nfunction normalizeHash(hash) {\n  if (typeof hash !== 'string') {\n    throw new Error('Hash must be of type string');\n  } else {\n    return hash.replace(/^#/, '');\n  }\n}\n\nconst browser = {\n  /**\n   * Detects the native Android Operating System.\n   *\n   * @param {string} userAgent  The user agent string.\n   * @return {boolean}\n   */\n  isAndroidOS(userAgent) {\n    return userAgent.includes('Mozilla/5.0') && userAgent.includes('Android ');\n  },\n\n  /**\n   * Detects the iOS operating system.\n   *\n   * @param {string} userAgent  The user agent string.\n   * @return {boolean}\n   */\n  isIOS(userAgent) {\n    return /(iPad|iPhone|iPod)/g.test(userAgent);\n  },\n\n  /**\n   * User agent test for IOS. Determines whether current version is < 8. Version 8\n   * and higher allow javascript execution while scrolling.\n   *\n   * @param {string} userAgent The user agent string.\n   * @return {boolean}\n   */\n  hasScrollEvents(userAgent) {\n    if (this.isIOS(userAgent)) {\n      return this.getIOSVersion(userAgent) >= 800;\n    }\n    return !browser.isNativeAndroid(userAgent);\n  },\n\n  /**\n   * Detects the version of iOS operating system.\n   *\n   * @param {string} userAgent  The user agent string.\n   * @return {number} iOS version. iOS 8.4.0, for example, will return `840`.\n   */\n  getIOSVersion(userAgent) {\n    const iosUserAgent = userAgent.match(/OS\\s+([\\d_]+)/i);\n    const iosVersion = iosUserAgent[1].split('_');\n\n    // The iOS ua string doesn't include the patch version if it's zero.\n    if (iosVersion.length === 2) {\n      iosVersion[2] = 0;\n    }\n\n    return parseInt(iosVersion.reduce((str, number) => str + number, ''), 10);\n  },\n\n  /**\n   * Check for Microsoft Edge string.\n   *\n   * @param {string} userAgent  The user agent string.\n   * @return {boolean}\n   */\n  isEdge(userAgent) {\n    return userAgent.includes('Edge/');\n  },\n\n  /**\n   * Check for Microsoft Internet Explorer string.\n   *\n   * @param {string} userAgent  The user agent string.\n   * @return {boolean}\n   */\n  isIE(userAgent) {\n    return userAgent.includes('Trident/');\n  },\n\n  /**\n   * Detects all Google Chrome browsers.\n   *\n   * @param {string} userAgent  The user agent string.\n   * @return {boolean}\n   */\n  isChrome(userAgent) {\n    return !browser.isEdge(userAgent) && userAgent.includes('Chrome');\n  },\n\n  /**\n   * Whether the give user agent is from the stock Android browser.\n   * @param {string} userAgent User agent string.\n   * @return {boolean}\n   */\n  isNativeAndroid(userAgent) {\n    return browser.isAndroidOS(userAgent) && !browser.isChrome(userAgent);\n  },\n\n  /**\n   * Updates the browser's hash\n   * @param {string} newHash New hash, without `#`\n   */\n  setHash(newHash) {\n    const hash = normalizeHash(newHash);\n    let st;\n\n    // When resetting the hash with `''`, the page will scroll back to the top,\n    // so we cache the current scroll position.\n    if (!hash) {\n      st = window.pageYOffset;\n    }\n\n    window.location.hash = hash;\n\n    // Scroll back to the position from before.\n    if (!hash) {\n      window.scrollTo(0, st);\n    }\n  },\n\n  /**\n   * Updates the user's history with new hash\n   * @param {string} newHash New hash, without `#`\n   */\n  replaceWithHash(newHash) {\n    let hash = normalizeHash(newHash);\n    if (window.history.replaceState) {\n      hash = normalizeHash(hash);\n\n      // If resetting the hash, the whole path is needed. `''` doesn't work.\n      if (hash) {\n        hash = '#' + hash;\n      } else {\n        hash = window.location.pathname + window.location.search;\n      }\n\n      window.history.replaceState({}, null, hash);\n    } else {\n      browser.setHash(hash);\n    }\n  },\n};\n\nexport default browser;\n","// Until this PR is accepted, SVG elements don't work with that polyfill. This\n// is the patched version of `element-closest` package.\n// https://github.com/jonathantneal/closest/pull/11\n// Support: Edge 14+, Android<=4.4.4\n/* istanbul ignore next */\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n}\n\n// Support: Edge 14+, Android<=4.4.4, Safari<=8, iOS<=8.4\n/* istanbul ignore next */\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function closest(selector) {\n    var element = this; // eslint-disable-line\n\n    while (element) {\n      if (element.matches(selector)) {\n        break;\n      }\n\n      element = element.parentNode instanceof Element ? element.parentNode : null;\n    }\n\n    return element;\n  };\n}\n\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik MÃ¶ller. fixes from Paul Irish and Tino Zijdel\n\n// MIT license\n\n// Support: IE<=9, Android<=4.3\n/* istanbul ignore next */\nif (!window.requestAnimationFrame) {\n  let lastTime = 0;\n  window.requestAnimationFrame = function raf(callback) {\n    const currTime = new Date().getTime();\n    const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    const id = window.setTimeout(() => {\n      callback(currTime + timeToCall);\n    }, timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\n/* istanbul ignore next */\nif (!window.cancelAnimationFrame) {\n  window.cancelAnimationFrame = function caf(id) {\n    clearTimeout(id);\n  };\n}\n","const utilities = {\n  /**\n   * Fallback to a specified default if an input is undefined or null.\n   * @param {*} obj The input to test.\n   * @param {*} defaultValue The fallback if the input is undefined.\n   * @param {boolean=} test If defined, `test` will be used to determine which\n   *     value should be used.\n   * @return {*} The sanitized output, either `obj` or `defaultValue`.\n   */\n  defaultsTo(obj, defaultValue, test = utilities.isDefined(obj)) {\n    return test ? obj : defaultValue;\n  },\n\n  /**\n   * @param {*} obj Anything.\n   * @return {boolean}\n   */\n  isString(obj) {\n    return typeof obj === 'string';\n  },\n\n  /**\n   * @param {*} obj Anything.\n   * @return {boolean}\n   */\n  isDefined(obj) {\n    return obj !== undefined && obj !== null;\n  },\n\n  /**\n   * Parse a value as a number. If it's not numeric, then the default value will\n   * be returned.\n   * @param {*} value The option.\n   * @param {*} defaultValue The fallback value.\n   * @return {*} If value is numeric, value, else defaultValue.\n   */\n  getNumberOption(value, defaultValue) {\n    const number = parseFloat(value);\n    return utilities.defaultsTo(number, defaultValue, !isNaN(number));\n  },\n\n  /**\n   * Parse a value as a string. If it's not a string, then the default value\n   * will be returned.\n   * @param {*} value The option.\n   * @param {*} defaultValue The fallback value.\n   * @return {*} If value is a string, value, else defaultValue.\n   */\n  getStringOption(value, defaultValue) {\n    return utilities.defaultsTo(value, defaultValue, utilities.isString(value));\n  },\n\n  /**\n   * Parse a value as a percentage. If it's a string with '%' in it, it will\n   * be parsed as a string, otherwise it will be parsed as a number.\n   * @param {*} value The option.\n   * @param {*} defaultValue The fallback value.\n   * @return {*}\n   */\n  getPercentageOption(value, defaultValue) {\n    if (utilities.isString(value) && value.indexOf('%') > -1) {\n      return utilities.getStringOption(value, defaultValue);\n    }\n\n    return utilities.getNumberOption(value, defaultValue);\n  },\n\n  noop() {},\n};\n\nexport default utilities;\n","import OdoDevice from '@odopod/odo-device';\n\nconst device = {\n\n  /**\n   * Returns the prefixed or unprefixed pointer event name or null if not pointer events.\n   * @param {string} event The event name. e.g. \"pointerdown\".\n   * @return {?string} The event name or null.\n   */\n  getPointerEvent(event) {\n    if (OdoDevice.HAS_POINTER_EVENTS) {\n      return event;\n    }\n\n    return null;\n  },\n\n  /**\n   * Returns a normalized transition end event name.\n   *\n   * Issue with Modernizr prefixing related to stock Android 4.1.2\n   * That version of Android has both unprefixed and prefixed transitions\n   * built in, but will only listen to the prefixed on in certain cases\n   * https://github.com/Modernizr/Modernizr/issues/897\n   *\n   * @param {string} transitionend The current transition end event name.\n   * @return {string} A patched transition end event name.\n   */\n  getTransitionEndEvent() {\n    const div = document.createElement('div');\n    div.style.transitionProperty = 'width';\n\n    // Test the value which was just set. If it wasn't able to be set,\n    // then it shouldn't use unprefixed transitions.\n    /* istanbul ignore next */\n    if (div.style.transitionProperty !== 'width' && 'webkitTransition' in div.style) {\n      return 'webkitTransitionEnd';\n    }\n\n    return {\n      // Saf < 7, Android Browser < 4.4\n      WebkitTransition: 'webkitTransitionEnd',\n      transition: 'transitionend',\n    }[OdoDevice.Dom.TRANSITION];\n  },\n\n  /**\n   * Returns a normalized animation end event name.\n   * @return {string}\n   */\n  getAnimationEndEvent() {\n    return {\n      WebkitAnimation: 'webkitAnimationEnd',\n      animation: 'animationend',\n    }[OdoDevice.Dom.ANIMATION];\n  },\n\n  /**\n   * Returns a string to be used with transforms.\n   * @param {string=} x The x position value with units. Default is zero.\n   * @param {string=} y The y position value with units. Default is zero.\n   * @return {string} The css value for transform.\n   */\n  getTranslate(x = 0, y = 0) {\n    return `translate(${x},${y})`;\n  },\n};\n\nexport default device;\n","import device from './device';\n\nconst events = {\n  // Mouse events\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  MOUSEDOWN: 'mousedown',\n  MOUSEUP: 'mouseup',\n  MOUSEOVER: 'mouseover',\n  MOUSEOUT: 'mouseout',\n  MOUSEMOVE: 'mousemove',\n\n  // IE, Safari, Chrome\n  SELECTSTART: 'selectstart',\n\n  // Key events\n  KEYPRESS: 'keypress',\n  KEYDOWN: 'keydown',\n  KEYUP: 'keyup',\n\n  // Focus\n  BLUR: 'blur',\n  FOCUS: 'focus',\n\n  // IE only\n  DEACTIVATE: 'deactivate',\n\n  FOCUSIN: 'focusin',\n  FOCUSOUT: 'focusout',\n\n  // Forms\n  CHANGE: 'change',\n  SELECT: 'select',\n  SUBMIT: 'submit',\n  INPUT: 'input',\n\n  // IE only\n  PROPERTYCHANGE: 'propertychange',\n\n  // Drag and drop\n  DRAGSTART: 'dragstart',\n  DRAG: 'drag',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DRAGLEAVE: 'dragleave',\n  DROP: 'drop',\n  DRAGEND: 'dragend',\n\n  // WebKit touch events.\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  TOUCHCANCEL: 'touchcancel',\n\n  // Misc\n  BEFOREUNLOAD: 'beforeunload',\n  CONTEXTMENU: 'contextmenu',\n  ERROR: 'error',\n  HELP: 'help',\n  LOAD: 'load',\n  LOSECAPTURE: 'losecapture',\n  READYSTATECHANGE: 'readystatechange',\n  RESIZE: 'resize',\n  SCROLL: 'scroll',\n  UNLOAD: 'unload',\n\n  // HTML 5 History events\n  // See http://www.w3.org/TR/html5/history.html#event-definitions\n  HASHCHANGE: 'hashchange',\n  PAGEHIDE: 'pagehide',\n  PAGESHOW: 'pageshow',\n  POPSTATE: 'popstate',\n\n  // Copy and Paste\n  // Support is limited. Make sure it works on your favorite browser\n  // before using.\n  // http://www.quirksmode.org/dom/events/cutcopypaste.html\n  COPY: 'copy',\n  PASTE: 'paste',\n  CUT: 'cut',\n  BEFORECOPY: 'beforecopy',\n  BEFORECUT: 'beforecut',\n  BEFOREPASTE: 'beforepaste',\n\n  // HTML5 online/offline events.\n  // http://www.w3.org/TR/offline-webapps/#related\n  ONLINE: 'online',\n  OFFLINE: 'offline',\n\n  // HTML 5 worker events\n  MESSAGE: 'message',\n  CONNECT: 'connect',\n\n  // Css transition events.\n  TRANSITIONEND: device.getTransitionEndEvent(),\n\n  ANIMATIONEND: device.getAnimationEndEvent(),\n\n  // Pointer events\n  POINTERCANCEL: device.getPointerEvent('pointercancel'),\n  POINTERDOWN: device.getPointerEvent('pointerdown'),\n  POINTERMOVE: device.getPointerEvent('pointermove'),\n  POINTEROVER: device.getPointerEvent('pointerover'),\n  POINTEROUT: device.getPointerEvent('pointerout'),\n  POINTERUP: device.getPointerEvent('pointerup'),\n};\n\nexport default events;\n","import OdoDevice from '@odopod/odo-device';\n\nimport Stepper from './animation-stepper';\nimport utilities from './utilities';\nimport events from './events';\n\nconst animation = {\n  Stepper,\n\n  scrollTo(position = 0, duration = 400, callback = utilities.noop, easing = undefined) {\n    const options = {\n      start: window.pageYOffset,\n      end: position,\n      duration,\n      step(scrollTop) {\n        window.scrollTo(0, scrollTop);\n      },\n    };\n\n    // Avoid setting `easing` to `undefined`.\n    if (typeof easing === 'function') {\n      options.easing = easing;\n    }\n\n    const anim = new animation.Stepper(options);\n    anim.onfinish = callback;\n  },\n\n  /**\n   * Fade in an element and optionally add a class which sets visibility\n   * to hidden.\n   * @param {Element} elem Element to fade.\n   * @param {Function} [fn=noop] Callback function when faded out.\n   * @param {Object} [context=window] Context for the callback.\n   * @param {boolean} [invisible=false] Whether to add visibility:hidden to the\n   *     element once it has faded. Defaults to false.\n   */\n  fadeOutElement(elem, fn, context, invisible) {\n    return animation.fadeElement(elem, fn, context, invisible, true);\n  },\n\n  /**\n   * Fade in an element and optionally remove a class which sets visibility\n   * to hidden.\n   * @param {Element} elem Element to fade.\n   * @param {Function} [fn=noop] Callback function when faded out.\n   * @param {Object} [context=window] Context for the callback.\n   * @param {boolean} [invisible=false] Whether to add visibility:hidden to the\n   *     element once it has faded. Defaults to false.\n   */\n  fadeInElement(elem, fn, context, invisible) {\n    return animation.fadeElement(elem, fn, context, invisible, false);\n  },\n\n  /**\n   * Fade out an element and then set visibilty hidden on it.\n   * @param {Element} elem Element to fade.\n   * @param {Function} [fn=noop] Callback function when faded out.\n   * @param {Object} [context=window] Context for the callback.\n   * @param {boolean} [invisible=false] Whether to add visibility:hidden to the\n   *     element once it has faded out. Defaults to false.\n   * @param {boolean} [isOut=true] Whether to fade out or in. Defaults true.\n   * @return {number} id used to cancel the transition end listener.\n   */\n  fadeElement(elem, fn = utilities.noop, context = window, invisible = false, isOut = true) {\n    const element = animation._getElement(elem);\n\n    // Bind the context to the callback here so that the context and function\n    // references can be garbage collected and the only things left are `callback`\n    // and `invisible`.\n    const callback = fn.bind(context);\n\n    // Make sure the transition will actually happen.\n    // isIn and has `in` and `fade` classes or\n    // isIn but doesn't have `fade` or\n    // isOut and has `fade`, but doesn't have `in` class.\n    const hasIn = element.classList.contains(animation.Classes.IN);\n    const hasFade = element.classList.contains(animation.Classes.FADE);\n    if ((!isOut && hasIn && hasFade) ||\n        (!isOut && !hasFade) ||\n        (isOut && !hasIn && hasFade)) {\n      const fakeEvent = animation._getFakeEvent(element);\n\n      // This is expected to be async.\n      setTimeout(() => {\n        callback(fakeEvent);\n      }, 0);\n\n      return 0;\n    }\n\n    /**\n     * Internal callback when the element has finished its transition.\n     * @param {{target: Element, currentTarget: Element}}\n     *     evt Event object.\n     */\n    function faded(evt) {\n      // Element has faded out, add invisible class.\n      if (isOut && invisible) {\n        evt.currentTarget.classList.add(animation.Classes.INVISIBLE);\n      }\n\n      callback(evt);\n    }\n\n    // Fading in, remove invisible class.\n    if (!isOut && invisible) {\n      elem.classList.remove(animation.Classes.INVISIBLE);\n    }\n\n    // Make sure it has the \"fade\" class. It won't do anything if it already does.\n    elem.classList.add(animation.Classes.FADE);\n\n    // Remove (or add) the \"in\" class which triggers the transition.\n    // If the element had neither of these classes, adding the \"fade\" class\n    // will trigger the transition.\n    elem.classList.toggle(animation.Classes.IN, !isOut);\n\n    return animation.onTransitionEnd(elem, faded, null, 'opacity');\n  },\n\n  /**\n   * Returns the element when the first parameter is a jQuery collection.\n   * @param {Element|jQuery} elem An element or a jQuery collection.\n   * @return {Element}\n   * @throws {Error} If it's a jQuery collection of more than one element.\n   */\n  _getElement(elem) {\n    if (elem.jquery) {\n      if (elem.length > 1) {\n        throw new TypeError('This method only supports transition end for one ' +\n           'element, not a collection');\n      }\n\n      return elem[0];\n    }\n\n    return elem;\n  },\n\n  _isOwnEvent(event) {\n    return event.target === event.currentTarget;\n  },\n\n  _isSameTransitionProperty(event, prop) {\n    return event.fake || !utilities.isDefined(prop) || event.propertyName === prop;\n  },\n\n  _getFakeEvent(elem) {\n    return {\n      target: elem,\n      currentTarget: elem,\n      fake: true,\n    };\n  },\n\n  onTransitionEnd(elem, fn, context = window, property = null, timeout = null) {\n    const element = animation._getElement(elem);\n\n    const callback = fn.bind(context);\n    animation._transitionId += 1;\n    const transitionId = animation._transitionId;\n    let timerId;\n\n    /**\n     * @param {TransitionEvent|{target: Element, currentTarget: Element}} evt Event object.\n     */\n\n    function transitionEnded(evt) {\n      // Some other element's transition event could have bubbled up to this.\n      // or\n      // If the optional property exists and it's not the property which was\n      // transitioned, exit out of the function and continue waiting for the\n      // right transition property.\n      if (!animation._isOwnEvent(evt) || !animation._isSameTransitionProperty(evt, property)) {\n        return;\n      }\n\n      // Remove from active transitions.\n      delete animation._transitions[transitionId];\n\n      // If the browser has transitions, there will be a listener bound to the\n      // `transitionend` event which needs to be removed.\n      if (OdoDevice.HAS_TRANSITIONS) {\n        evt.currentTarget.removeEventListener(events.TRANSITIONEND, transitionEnded);\n      }\n\n      // Done!\n      callback(evt);\n      clearTimeout(timerId);\n    }\n\n    if (OdoDevice.HAS_TRANSITIONS) {\n      element.addEventListener(events.TRANSITIONEND, transitionEnded);\n\n      // Sometimes the transition end event doesn't fire, usually when\n      // properties don't change or when iOS decides to just snap instead of\n      // transition. To get around this, a timer is set which will trigger the\n      // fake event.\n      if (timeout) {\n        timerId = setTimeout(() => {\n          transitionEnded(animation._getFakeEvent(element));\n        }, timeout);\n      }\n    } else {\n      // Push to the end of the queue with a fake event which will pass the checks\n      // inside the callback function.\n      timerId = setTimeout(() => {\n        transitionEnded(animation._getFakeEvent(element));\n      }, 0);\n    }\n\n    // Save this active transition end listener so it can be canceled.\n    animation._transitions[transitionId] = {\n      element,\n      timerId,\n      listener: transitionEnded,\n    };\n\n    // Return id used to cancel the transition end listener, similar to setTimeout\n    // and requestAnimationFrame.\n    return transitionId;\n  },\n\n  /**\n   * Remove the event listener for `transitionend`.\n   * @param {number} id The number returned by `onTransitionEnd`.\n   * @return {boolean} Whether the transition was canceled or not. If the transition\n   *     already finished, this method will return false.\n   */\n  cancelTransitionEnd(id) {\n    const obj = this._transitions[id];\n\n    if (obj) {\n      clearTimeout(obj.timerId);\n\n      if (OdoDevice.HAS_TRANSITIONS) {\n        obj.element.removeEventListener(events.TRANSITIONEND, obj.listener);\n      }\n\n      delete this._transitions[id];\n      return true;\n    }\n    return false;\n  },\n\n  /**\n   * Execute a callback when a css animation finishes.\n   * @param {Element} elem The element which as an animation on it.\n   * @param {Function} fn Callback function\n   * @param {Object} [context=window] Optional context for the callback.\n   */\n  onAnimationEnd(elem, fn, context = window) {\n    const element = animation._getElement(elem);\n\n    const callback = fn.bind(context);\n\n    function animationEnded(evt) {\n      // Ensure the `animationend` event was from the element specified.\n      // Difficult to test without tracking callbacks.\n      /* istanbul ignore next */\n      if (!animation._isOwnEvent(evt)) {\n        return;\n      }\n\n      // Remove the listener if it was bound.\n      if (OdoDevice.HAS_CSS_ANIMATIONS) {\n        evt.currentTarget.removeEventListener(events.ANIMATIONEND, animationEnded);\n      }\n\n      callback(evt);\n    }\n\n    if (OdoDevice.HAS_CSS_ANIMATIONS) {\n      element.addEventListener(events.ANIMATIONEND, animationEnded);\n    } else {\n      // Callback is expected to be async, so push it to the end of the queue.\n      setTimeout(() => {\n        animationEnded(animation._getFakeEvent(element));\n      }, 0);\n    }\n  },\n};\n\nanimation.scrollToTop = animation.scrollTo;\n\nanimation.Classes = {\n  FADE: 'fade',\n  IN: 'in',\n  INVISIBLE: 'invisible',\n};\n\nanimation._transitions = {};\nanimation._transitionId = 0;\n\nexport default animation;\n","const array = {\n\n  /**\n   * Given an array of numbers (`arr`), find the item in the array closest\n   * to a given number (`num`).\n   *\n   * @param  {Array.<number>} arr An array of numbers.\n   * @param  {number} num Close number to search from.\n   * @return {?number} The closest number in the array.\n   */\n  closest(arr, num) {\n    let closest = null;\n\n    arr.reduce((closestDiff, value) => {\n      const diff = Math.abs(value - num);\n      if (diff < closestDiff) {\n        closest = value;\n        return diff;\n      }\n\n      return closestDiff;\n    }, Infinity);\n\n    return closest;\n  },\n\n  /**\n   * Given an array of numbers (`arr`), find the item in the array closest\n   * to a given number (`num`), while also less than (`num`).\n   *\n   * @param  {Array.<number>} arr An array of numbers.\n   * @param  {number} num Close number to search from.\n   * @return {?number} The closest number in the array.\n   */\n  closestLessThan(arr, num) {\n    return array.closest(arr.filter(value => value < num), num);\n  },\n\n  /**\n   * Given an array of numbers (`arr`), find the item in the array closest\n   * to a given number (`num`), while also greater than (`num`).\n   *\n   * @param  {Array.<number>} arr An array of numbers.\n   * @param  {number} num Close number to search from.\n   * @return {?number} The closest number in the array.\n   */\n  closestGreaterThan(arr, num) {\n    return array.closest(arr.filter(value => value > num), num);\n  },\n\n  /**\n   * Make an array of smaller arrays from an array.\n   * @param {Array.<*>} array An array to take chunks from.\n   * @param {number} size The number of items per chunk.\n   * @return {Array.<Array.<*>>}\n   */\n  chunk(array, size) {\n    if (!size) {\n      return [];\n    }\n\n    const numArrays = Math.ceil(array.length / size);\n    const chunked = new Array(numArrays);\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0, index = 0; i < numArrays; index += size, i++) {\n      chunked[i] = array.slice(index, index + size);\n    }\n\n    return chunked;\n  },\n\n  /**\n   * Finds and returns the longest word in an array of words.\n   *\n   * @param {Array.<string>} stringsArray An array containing individual strings.\n   * @return {string} The longest word in the array.\n   */\n  getLongestString(stringsArray) {\n    let currentLongestIndex = 0;\n\n    for (let i = 1; i < stringsArray.length; i++) {\n      if (stringsArray[i].length > stringsArray[currentLongestIndex].length) {\n        currentLongestIndex = i;\n      }\n    }\n\n    return stringsArray[currentLongestIndex];\n  },\n\n  /**\n   * Remove an item from an array.\n   * @param {Array.<*>} arr An array.\n   * @param {*} item Thing to remove from the array.\n   * @return {?*} The item which was removed or null.\n   */\n  remove(arr, item) {\n    const index = arr.indexOf(item);\n    if (index === -1) {\n      return null;\n    }\n\n    arr.splice(index, 1);\n    return item;\n  },\n};\n\nexport default array;\n","class Coordinate {\n  /**\n   * Class for representing coordinates and positions.\n   * @param {number} [x=0] Left, defaults to 0.\n   * @param {number} [y=0] Top, defaults to 0.\n   * @constructor\n   */\n  constructor(x = 0, y = 0) {\n    /**\n     * X-value\n     * @type {number}\n     */\n    this.x = x;\n\n    /**\n     * Y-value\n     * @type {number}\n     */\n    this.y = y;\n  }\n\n  /**\n   * Returns a duplicate of this coordinate.\n   * @return {Coordinate}\n   */\n  clone() {\n    return new Coordinate(this.x, this.y);\n  }\n\n  /**\n   * Scales this coordinate by the given scale factors. The x and y values are\n   * scaled by {@code sx} and {@code optSy} respectively.  If {@code optSy}\n   * is not given, then {@code sx} is used for both x and y.\n   * @param {number} sx The scale factor to use for the x dimension.\n   * @param {number=} optSy The scale factor to use for the y dimension.\n   * @return {!Coordinate} This coordinate after scaling.\n   */\n  scale(sx, optSy = sx) {\n    this.x *= sx;\n    this.y *= optSy;\n    return this;\n  }\n\n  /**\n   * Translates this box by the given offsets. If a {@code Coordinate}\n   * is given, then the x and y values are translated by the coordinate's x and y.\n   * Otherwise, x and y are translated by {@code tx} and {@code opt_ty}\n   * respectively.\n   * @param {number|Coordinate} tx The value to translate x by or the\n   *     the coordinate to translate this coordinate by.\n   * @param {number} ty The value to translate y by.\n   * @return {!Coordinate} This coordinate after translating.\n   */\n  translate(tx, ty) {\n    if (tx instanceof Coordinate) {\n      this.x += tx.x;\n      this.y += tx.y;\n    } else {\n      this.x += tx;\n      this.y += ty;\n    }\n\n    return this;\n  }\n\n  /**\n   * Compares coordinates for equality.\n   * @param {Coordinate} a A Coordinate.\n   * @param {Coordinate} b A Coordinate.\n   * @return {boolean} True iff the coordinates are equal, or if both are null.\n   */\n  static equals(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (!a || !b) {\n      return false;\n    }\n\n    return a.x === b.x && a.y === b.y;\n  }\n\n  /**\n   * Returns the distance between two coordinates.\n   * @param {!Coordinate} a A Coordinate.\n   * @param {!Coordinate} b A Coordinate.\n   * @return {number} The distance between {@code a} and {@code b}.\n   */\n  static distance(a, b) {\n    const dx = a.x - b.x;\n    const dy = a.y - b.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * Returns the difference between two coordinates as a new Coordinate.\n   * @param {!Coordinate} a A Coordinate.\n   * @param {!Coordinate} b A Coordinate.\n   * @return {!Coordinate} A Coordinate representing the difference\n   *     between {@code a} and {@code b}.\n   */\n  static difference(a, b) {\n    return new Coordinate(a.x - b.x, a.y - b.y);\n  }\n\n  /**\n   * Returns the sum of two coordinates as a new Coordinate.\n   * @param {!Coordinate} a A Coordinate.\n   * @param {!Coordinate} b A Coordinate.\n   * @return {!Coordinate} A Coordinate representing the sum of the two coordinates.\n   */\n  static sum(a, b) {\n    return new Coordinate(a.x + b.x, a.y + b.y);\n  }\n\n  /**\n   * Returns the product of two coordinates as a new Coordinate.\n   * @param {!Coordinate} a A Coordinate.\n   * @param {!Coordinate} b A Coordinate.\n   * @return {!Coordinate} A Coordinate representing the product of the two coordinates.\n   */\n  static product(a, b) {\n    return new Coordinate(a.x * b.x, a.y * b.y);\n  }\n\n  /**\n   * Returns the quotient of two coordinates as a new Coordinate.\n   * @param {!Coordinate} a A Coordinate.\n   * @param {!Coordinate} b A Coordinate.\n   * @return {!Coordinate} A Coordinate representing the quotient of the two coordinates.\n   */\n  static quotient(a, b) {\n    return new Coordinate(a.x / b.x, a.y / b.y);\n  }\n\n  /**\n   * Scales this coordinate by the given scale factors. This does not affect the\n   * properites of the coordinate parameter.\n   * @param {!Coordinate} a A Coordinate.\n   * @param {number} sx The scale factor to use for the x dimension.\n   * @param {number=} optSy The scale factor to use for the y dimension.\n   * @return {!Coordinate} This coordinate after scaling.\n   */\n  static scale(a, sx, optSy = sx) {\n    return new Coordinate(a.x * sx, a.y * optSy);\n  }\n}\n\nexport default Coordinate;\n","const dom = {\n\n  /**\n   * Retrieves the first child which is an element from a parent node.\n   * @param {Element} node Parent node.\n   * @return {?Element} The first element child or null if there isn't one.\n   */\n  getFirstElementChild(node) {\n    return node.firstElementChild;\n  },\n\n  /**\n   * Removes all children from a parent node.\n   * @param {Element} element Parent node.\n   */\n  removeChildren(element) {\n    element.textContent = '';\n  },\n\n  /**\n   * Retrieves all children (excluding text nodes) for an element. `children` is\n   * available in IE9+, but does not work for document fragments nor SVG.\n   * @param {Element} element Parent node.\n   * @return {!Array.<Element>} A real array of child elements.\n   */\n  getChildren(element) {\n    return Array.from(element.children);\n  },\n\n  /**\n   * Swaps element1 with element2 in the DOM.\n   * @param {Element} elm1 first element.\n   * @param {Element} elm2 second element.\n   */\n  swapElements(elm1, elm2) {\n    if (!elm1 || !elm2) {\n      return;\n    }\n\n    const parent1 = elm1.parentNode;\n    const next1 = elm1.nextSibling;\n    const parent2 = elm2.parentNode;\n    const next2 = elm2.nextSibling;\n\n    parent1.insertBefore(elm2, next1);\n    parent2.insertBefore(elm1, next2);\n  },\n\n  /**\n   * Set an id on an element if one doesn't exist.\n   * @param {Element} element Element to give an id.\n   * @param {function():string|string} fn Returns an id to set.\n   */\n  giveId(element, fn) {\n    if (!element.id) {\n      element.id = typeof fn === 'function' ? fn() : fn;\n    }\n  },\n\n  /**\n   * Ripped from: goog.testing.editor.dom.getRelativeDepth_.\n   *\n   * Returns the depth of the given node relative to the given parent node, or -1\n   * if the given node is not a descendant of the given parent node. E.g. if\n   * node == parentNode returns 0, if node.parentNode == parentNode returns 1,\n   * etc.\n   * @param {Node} node Node whose depth to get.\n   * @param {Node} parentNode Node relative to which the depth should be\n   *     calculated.\n   * @return {number} The depth of the given node relative to the given parent\n   *     node, or -1 if the given node is not a descendant of the given parent\n   *     node.\n   */\n  getRelativeDepth(node, parentNode) {\n    let depth = 0;\n    let child = node;\n    while (child) {\n      if (child === parentNode) {\n        return depth;\n      }\n\n      child = child.parentNode;\n      depth += 1;\n    }\n\n    return -1;\n  },\n\n  /**\n   * Retrieves the nth sibling of an element, or null if the would be nth sibling\n   * does not exist. Heads up! This function excludes text nodes.\n   * @param {Element} node Element to start looking from.\n   * @param {number} n An integer representing the desired element relative to\n   *     `node`. For example, `2` would look for `node.nextSibling.nextSibling`.\n   * @param {boolean=} optIsForward Whether to look forwards or backwards. Default is true.\n   * @return {?Element} The nth sibling or null.\n   */\n  getNthSibling(node, n, optIsForward) {\n    const isForward = optIsForward !== false;\n    let siblingCount = 0;\n    let sibling = node;\n    do {\n      sibling = isForward ?\n        sibling.nextElementSibling :\n        sibling.previousElementSibling;\n      siblingCount += 1;\n    } while (sibling && siblingCount < n);\n    return sibling;\n  },\n\n  /**\n   * Returns a promise for interactive ready state / DOMContentLoaded event trigger\n   * Page has finished loading but external resources are still loading\n   * @type {Promise}\n   */\n  ready: new Promise((resolve) => {\n    /* istanbul ignore if */\n    if (document.readyState === 'interactive') {\n      resolve();\n    } else {\n      document.addEventListener('DOMContentLoaded', function ready() {\n        document.removeEventListener('DOMContentLoaded', ready);\n        resolve();\n      });\n    }\n  }),\n\n  /**\n   * Returns as promise for complete ready state / load event trigger\n   * Page has completely finished loading\n   * @type {Promise}\n   */\n  loaded: new Promise((resolve) => {\n    /* istanbul ignore if */\n    if (document.readyState === 'complete') {\n      resolve();\n    } else {\n      window.addEventListener('load', function complete() {\n        window.removeEventListener('load', complete);\n        resolve();\n      });\n    }\n  }),\n};\n\nexport default dom;\n","class Box {\n  /**\n   * Class for representing a box. A box is specified as a top, right, bottom,\n   * and left. A box is useful for representing margins and padding.\n   * @param {number} top Top.\n   * @param {number} right Right.\n   * @param {number} bottom Bottom.\n   * @param {number} left Left.\n   * @constructor\n   */\n  constructor(top, right, bottom, left) {\n    /**\n     * Top\n     * @type {number}\n     */\n    this.top = top;\n\n    /**\n     * Right\n     * @type {number}\n     */\n    this.right = right;\n\n    /**\n     * Bottom\n     * @type {number}\n     */\n    this.bottom = bottom;\n\n    /**\n     * Left\n     * @type {number}\n     */\n    this.left = left;\n  }\n}\n\nclass Rect {\n  /**\n   * Class for representing rectangular regions.\n   * @param {number} x Left.\n   * @param {number} y Top.\n   * @param {number} w Width.\n   * @param {number} h Height.\n   * @constructor\n   */\n  constructor(x, y, w, h) {\n    /**\n     * Left\n     * @type {number}\n     */\n    this.left = x;\n\n    /**\n     * Top\n     * @type {number}\n     */\n    this.top = y;\n\n    /**\n     * Width\n     * @type {number}\n     */\n    this.width = w;\n\n    /**\n     * Height\n     * @type {number}\n     */\n    this.height = h;\n  }\n\n  /**\n   * Returns whether two rectangles intersect. Two rectangles intersect if they\n   * touch at all, for example, two zero width and height rectangles would\n   * intersect if they had the same top and left.\n   * @param {goog.math.Rect} a A Rectangle.\n   * @param {goog.math.Rect} b A Rectangle.\n   * @return {boolean} Whether a and b intersect.\n   */\n  static intersects(a, b) {\n    return (a.left <= b.left + b.width && b.left <= a.left + a.width &&\n      a.top <= b.top + b.height && b.top <= a.top + a.height);\n  }\n}\n\nconst math = {\n\n  /**\n   * Takes a number and clamps it to within the provided bounds.\n   * @param {number} value The input number.\n   * @param {number} min The minimum value to return.\n   * @param {number} max The maximum value to return.\n   * @return {number} The input number if it is within bounds, or the nearest\n   *     number within the bounds.\n   */\n  clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n  },\n\n  /**\n   * Calculates the offset index for a circular list.\n   * @param {number} index Starting index.\n   * @param {number} displacement Offset from the starting index. Can be negative\n   *     or positive. For example, -2 or 2.\n   * @param {number} length Length of the list.\n   * @return {number} The index of the relative displacement, wrapping around\n   *     the end of the list to the start when the displacement is larger than\n   *     what's left in the list.\n   */\n  wrapAroundList(index, displacement, length) {\n    return (index + displacement + length * 10) % length;\n  },\n\n  Box,\n\n  Rect,\n\n  /**\n   * Add `right` and `bottom` properties to a rectangle. Normally this would be\n   * done in the constructor, but to make integration into closure easier,\n   * it is done in a separate method so the original goog.math.Rect is left unchanged.\n   * @param {number} x Left.\n   * @param {number} y Top.\n   * @param {number} w Width.\n   * @param {number} h Height.\n   */\n  getAugmentedRect(x, y, w, h) {\n    const rect = new Rect(x, y, w, h);\n    rect.right = rect.left + rect.width;\n    rect.bottom = rect.top + rect.height;\n    return rect;\n  },\n\n};\n\nexport default math;\n","const string = {\n  /**\n   * Capitalize a string.\n   * @param {string} str String to capitalize.\n   * @return {string} Capitalized string.\n   */\n  capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n  /**\n   * Hyphenates a javascript style string to a css one. For example:\n   * MozBoxSizing -> -moz-box-sizing.\n   *\n   * @param {string|boolean} str The string to hyphenate.\n   * @return {string} The hyphenated string.\n   */\n  hyphenate(str) {\n    // Catch booleans.\n    if (!str) {\n      return '';\n    }\n\n    // Turn MozBoxSizing into -moz-box-sizing.\n    return str\n      .replace(/([A-Z])/g, (str, m1) => '-' + m1.toLowerCase())\n      .replace(/^ms-/, '-ms-');\n  },\n\n  /**\n   * Creates a random string for IDs, etc.\n   * http://stackoverflow.com/a/8084248/995529\n   *\n   * @return {string} Random string.\n   */\n  random() {\n    return Math.random().toString(36).substring(7);\n  },\n};\n\nexport default string;\n","import math from './math';\n\nconst style = {\n  /**\n   * Gets the height and with of an element when the display is not none.\n   * @param {Element} element Element to get size of.\n   * @return {!{width: number, height: number}} Object with width/height.\n   */\n  getSize(element) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight,\n    };\n  },\n\n  /**\n   * Parse string to return numerical value.\n   * @param {string} value String of number\n   * @return {number} Numerical value or 0 if parseFloat returns NaN\n   */\n  getFloat(value) {\n    return parseFloat(value) || 0;\n  },\n\n  _getBox(element, property) {\n    const props = window.getComputedStyle(element, null);\n    return new math.Box(\n      style.getFloat(props[property + 'Top']),\n      style.getFloat(props[property + 'Right']),\n      style.getFloat(props[property + 'Bottom']),\n      style.getFloat(props[property + 'Left']));\n  },\n\n  getMarginBox(element) {\n    return style._getBox(element, 'margin');\n  },\n\n  getPaddingBox(element) {\n    return style._getBox(element, 'padding');\n  },\n\n  /**\n   * Returns the size (width or height) of a list of elements, including margins.\n   * @param {Array.<Element>} elements A real array of child elements.\n   * @param {string} dimension Width or height.\n   * @return {number}\n   */\n  getElementsSize(elements, dimension) {\n    return elements.reduce((memo, el) => {\n      const outerSize = style.getSize(el)[dimension];\n      const margins = style.getMarginBox(el);\n      const marginSize = dimension === 'height' ?\n        margins.top + margins.bottom :\n        margins.left + margins.right;\n\n      return memo + outerSize + marginSize;\n    }, 0);\n  },\n\n  // https://github.com/jquery/jquery/pull/764\n  // http://stackoverflow.com/a/15717609/373422\n  getWindowHeight() {\n    const windowHeight = window.innerHeight;\n\n    // Try to exclude the toolbars from the height on iPhone.\n    // TODO: add isIPhone back when it's available\n    // if (isIPhone) {\n    //   let screenHeight = screen.height;\n    //   let toolbarHeight = screenHeight - windowHeight;\n    //   windowHeight = screenHeight - toolbarHeight;\n    // }\n\n    return windowHeight;\n  },\n\n  /**\n   * Force the page to be repainted.\n   */\n  forceRedraw() {\n    const tempStyleSheet = document.createElement('style');\n    document.body.appendChild(tempStyleSheet);\n    document.body.removeChild(tempStyleSheet);\n  },\n\n  /**\n   * Ask the browser for a property that will cause it to recalculate styles\n   * and layout the element (and possibly surrounding/parent elements).\n   * @param {Element} element Element to for a layout for.\n   * @return {number} Width of the element. If you actually need the width of\n   *     element, use the `style.getSize` method.\n   */\n  causeLayout(element) {\n    return element.offsetWidth;\n  },\n\n  /**\n   * Determine which element in an array is the tallest.\n   * @param {ArrayLike<Element>} elements Array-like of elements.\n   * @return {number} Height of the tallest element.\n   */\n  _getTallest(elements) {\n    let tallest = 0;\n\n    for (let i = elements.length - 1; i >= 0; i--) {\n      if (elements[i].offsetHeight > tallest) {\n        tallest = elements[i].offsetHeight;\n      }\n    }\n\n    return tallest;\n  },\n\n  /**\n   * Set the height of every element in an array to a value.\n   * @param {ArrayLike<Element>} elements Array-like of elements.\n   * @param {string} height Height value to set.\n   */\n  _setAllHeights(elements, height) {\n    for (let i = elements.length - 1; i >= 0; i--) {\n      elements[i].style.height = height;\n    }\n  },\n\n  /**\n   * For groups of elements which should be the same height. Using this method\n   * will create far less style recalculations and layouts.\n   * @param {ArrayLike.<ArrayLike.<Element>>} groups An array-like collection of\n   *     an array-like collection of elements.\n   * @return {number|Array.<number>} An array containing the pixel value of the\n   *     tallest element for each group, or just a number if it's one group.\n   */\n  evenHeights(groups) {\n    let list = Array.from(groups);\n\n    // If the first item in the list is an element, then it needs to be wrapped\n    // in an array so the rest of the methods will work.\n    let isGroup = true;\n    if (list[0] && list[0].nodeType) {\n      isGroup = false;\n      list = [list];\n    }\n\n    // First, reset the height for every element.\n    // This is done first, otherwise we dirty the DOM on each loop!\n    list.forEach((elements) => {\n      style._setAllHeights(elements, '');\n    });\n\n    // Now, measure heights in each group and save the tallest value. Instead of\n    // setting the height value for the entire group, save it. If it were set,\n    // the next iteration in the loop would have to recalculate styles in the DOM\n    const tallests = list.map(elements => style._getTallest(elements));\n\n    // Lastly, set them all.\n    list.forEach((elements, i) => {\n      style._setAllHeights(elements, tallests[i] + 'px');\n    });\n\n    if (isGroup) {\n      return tallests;\n    }\n    return tallests[0];\n  },\n};\n\nexport default style;\n","class Timer {\n  /**\n   * A simple timer class. The timer does not start automatically when\n   * initialized.\n   * @param {Function} fn Callback for when the timer expires.\n   * @param {number} delay Timer length in milliseconds.\n   * @param {boolean=} opt_continuous If true, the timer will automatically\n   *     restart itself when it expires.\n   * @constructor\n   */\n  constructor(fn, delay, continuous = false) {\n    this.timerId = null;\n    this.startTime = null;\n    this.isPaused = false;\n    this.isTicking = false;\n    this.isContinuous = continuous;\n    this.delay = delay;\n    this.remaining = delay;\n    this.fn = fn;\n\n    this.resume = this.start;\n    this.pause = this.stop;\n  }\n\n  /**\n   * Starts ticking the timer.\n   * @return {number|boolean} The remaining time or false if the timer is\n   *     already ticking.\n   */\n  start() {\n    if (this.isTicking) {\n      return false;\n    }\n\n    this.startTime = Date.now();\n    this.timerId = setTimeout(() => {\n      this.fn();\n\n      // If the timer wasn't stopped in the callback and this is a continuous\n      // timer, start it again.\n      if (!this.isPaused && this.isContinuous) {\n        this.restart();\n      } else {\n        this.reset();\n      }\n    }, this.remaining);\n    this.isTicking = true;\n    this.isPaused = false;\n    return this.remaining;\n  }\n\n  /**\n   * Pauses the timer. Resuming will continue it with the remaining time.\n   * @return {number} Time remaining.\n   */\n  stop() {\n    this.clear();\n    this.remaining -= Date.now() - this.startTime;\n    this.isPaused = true;\n    this.isTicking = false;\n    return this.remaining;\n  }\n\n  /**\n   * Sets time remaining to initial delay and clears timer.\n   */\n  reset() {\n    this.remaining = this.delay;\n    this.clear();\n  }\n\n  /**\n   * Resets the timer to the original delay, clears the current timer, and\n   * starts the timer again.\n   */\n  restart() {\n    this.reset();\n    this.resume();\n  }\n\n  /**\n   * Clears timer.\n   */\n  clear() {\n    clearTimeout(this.timerId);\n    this.isPaused = false;\n    this.isTicking = false;\n  }\n\n  /**\n   * Destroy the timer.\n   */\n  dispose() {\n    this.clear();\n    this.fn = null;\n  }\n}\n\nexport default Timer;\n"],"names":["noop","normalizeHash","hash","Error","replace","Element","prototype","matches","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","closest","selector","element","this","parentNode","window","requestAnimationFrame","lastTime","callback","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","cancelAnimationFrame","Stepper","options","Object","assign","Defaults","_animationAmount","end","start","_animationStart","_handler","_animateLoop","bind","onfinish","_requestId","now","percent","duration","step","call","context","dispose","easing","cancel","k","cos","PI","utilities","obj","defaultValue","isDefined","undefined","value","number","parseFloat","defaultsTo","isNaN","isString","indexOf","getStringOption","getNumberOption","device","event","OdoDevice","HAS_POINTER_EVENTS","div","document","createElement","style","transitionProperty","Dom","TRANSITION","ANIMATION","events","getTransitionEndEvent","getAnimationEndEvent","getPointerEvent","animation","position","pageYOffset","scrollTop","scrollTo","elem","fn","invisible","fadeElement","isOut","_getElement","hasIn","classList","contains","Classes","IN","hasFade","FADE","fakeEvent","_getFakeEvent","remove","INVISIBLE","add","toggle","onTransitionEnd","evt","currentTarget","jquery","length","TypeError","target","prop","fake","propertyName","transitionEnded","_isOwnEvent","_isSameTransitionProperty","property","_transitions","transitionId","HAS_TRANSITIONS","removeEventListener","TRANSITIONEND","timerId","timeout","_transitionId","addEventListener","listener","animationEnded","HAS_CSS_ANIMATIONS","ANIMATIONEND","scrollToTop","array","arr","num","reduce","closestDiff","diff","abs","Infinity","filter","size","numArrays","ceil","chunked","Array","i","index","slice","stringsArray","currentLongestIndex","item","splice","browser","userAgent","includes","test","isIOS","getIOSVersion","isNativeAndroid","iosVersion","match","split","parseInt","str","isEdge","isAndroidOS","isChrome","newHash","st","location","history","replaceState","pathname","search","setHash","Coordinate","x","y","clone","scale","sx","optSy","translate","tx","ty","equals","a","b","distance","dx","dy","sqrt","difference","sum","product","quotient","dom","node","firstElementChild","textContent","from","children","elm1","elm2","parent1","next1","nextSibling","parent2","next2","insertBefore","depth","child","n","optIsForward","isForward","siblingCount","sibling","nextElementSibling","previousElementSibling","Promise","resolve","readyState","ready","complete","Rect","w","h","left","top","width","height","intersects","math","min","displacement","right","bottom","rect","string","charAt","toUpperCase","m1","toLowerCase","random","toString","substring","offsetWidth","offsetHeight","props","getComputedStyle","Box","getFloat","_getBox","elements","dimension","memo","el","outerSize","getSize","margins","getMarginBox","innerHeight","tempStyleSheet","body","appendChild","removeChild","tallest","groups","list","isGroup","nodeType","forEach","_setAllHeights","tallests","map","_getTallest","Timer","delay","continuous","startTime","isPaused","isTicking","isContinuous","remaining","resume","pause","stop","_this","restart","reset","clear"],"mappings":"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"}